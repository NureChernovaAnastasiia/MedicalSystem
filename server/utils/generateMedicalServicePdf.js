const PDFDocument = require('pdfkit');
const path = require('path');
const fs = require('fs');
const { formatDate } = require('./date');

async function generateMedicalServicePdf(service, res) {
  const doc = new PDFDocument({ margin: 50 });
  res.setHeader('Content-Type', 'application/pdf');
  res.setHeader('Content-Disposition', `inline; filename=medical-service-${service.id}.pdf`);
  doc.pipe(res);

  const fontPath = path.join(__dirname, '../assets/fonts/DejaVuSans.ttf');
  if (fs.existsSync(fontPath)) {
    doc.registerFont('UkrainianFont', fontPath);
    doc.font('UkrainianFont');
  }

  const patient = service.Patient;
  const doctor = service.Doctor;
  const hospital = patient?.Hospital || doctor?.Hospital;

  // üî∑ –ó–∞–≥–æ–ª–æ–≤–æ–∫
  doc
    .fontSize(18)
    .text("–ú–Ü–ù–Ü–°–¢–ï–†–°–¢–í–û –û–•–û–†–û–ù–ò –ó–î–û–†–û–í º–Ø –£–ö–†–ê–á–ù–ò", { align: "center" })
    .moveDown(0.2)
    .fontSize(16)
    .text("–ú–ï–î–ò–ß–ù–ê –ü–†–û–¶–ï–î–£–†–ê", { align: "center", underline: true })
    .moveDown(0.8)
    .fontSize(12)
    .text(`–õ—ñ–∫–∞—Ä–Ω—è: ${hospital?.name || '-'}, ${hospital?.address || '-'}`, { align: "left" })
    .moveDown(1);

  // üî∂ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
  doc
    .fontSize(12)
    .text(`–ü–∞—Ü—ñ—î–Ω—Ç: ${patient?.last_name} ${patient?.first_name} ${patient?.middle_name || ''}`)
    .text(`–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: ${formatDate(patient?.birth_date)}`)
    .text(`–õ—ñ–∫–∞—Ä: ${doctor?.last_name} ${doctor?.first_name} ${doctor?.middle_name || ''}`)
    .text(`–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: ${doctor?.specialization || '-'}`)
    .moveDown(1);

  // üìÖ –î–∞—Ç–∏
  doc
    .text(`–î–∞—Ç–∞ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥–∏: ${formatDate(service.createdAt)}`)
    .moveDown(1);

  // üìä –î–∞–Ω—ñ
  doc
    .fontSize(13)
    .text("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∏", { underline: true })
    .moveDown(0.5)
    .fontSize(12)
    .text(service.results || '–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ')
    .moveDown(1);

  doc
    .fontSize(13)
    .text("–ü—Ä–∏–º—ñ—Ç–∫–∏", { underline: true })
    .moveDown(0.5)
    .fontSize(12)
    .text(service.notes || '–ë–µ–∑ –ø—Ä–∏–º—ñ—Ç–æ–∫')
    .moveDown(2);

  // üñä –ü—ñ–¥–ø–∏—Å, –ø–µ—á–∞—Ç–∫–∞, –¥–∞—Ç–∞
  const signaturePath = path.resolve(__dirname, "../assets/signature.png");
  const stampPath = path.resolve(__dirname, "../assets/stamp.png");

  doc
    .fontSize(12)
    .text(`–î–∞—Ç–∞ –≤–∏–¥–∞—á—ñ: ${formatDate(new Date())}`, doc.page.width - 170, doc.y);

  const yBase = doc.y + 30;
  const xSignature = 50;
  const xStamp = doc.page.width - 170;

  if (fs.existsSync(signaturePath)) {
    doc.image(signaturePath, xSignature, yBase, { width: 120 });
    doc
      .fontSize(11)
      .text("–ü—ñ–¥–ø–∏—Å –ª—ñ–∫–∞—Ä—è", xSignature + 10, yBase + 60);
  }

  if (fs.existsSync(stampPath)) {
    doc.image(stampPath, xStamp, yBase - 10, { width: 100 });
  }

  doc
    .fontSize(11)
    .text("–ü—ñ–¥–ø–∏—Å –ª—ñ–∫–∞—Ä—è", xSignature + 10, yBase + 60);

  doc.end();
}

module.exports = generateMedicalServicePdf;
