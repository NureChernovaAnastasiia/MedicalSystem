const PDFDocument = require("pdfkit");
const path = require("path");
const fs = require("fs");
const { formatDate } = require('./date');

async function generatePrescriptionPdf(prescription, res) {
  const doc = new PDFDocument({ margin: 50 });
  const fileName = `prescription_${prescription.id}.pdf`;

  res.setHeader("Content-disposition", `attachment; filename="${fileName}"`);
  res.setHeader("Content-type", "application/pdf");
  doc.pipe(res);

  const fontPath = path.resolve(__dirname, "../assets/fonts/DejaVuSans.ttf");
  if (fs.existsSync(fontPath)) {
    doc.font(fontPath);
  }

  const patient = prescription.Patient;
  const doctor = prescription.Doctor;
  const hospital = doctor?.Hospital;

  // üî∑ –ó–∞–≥–æ–ª–æ–≤–æ–∫
  doc
    .fontSize(18)
    .text("–ú–Ü–ù–Ü–°–¢–ï–†–°–¢–í–û –û–•–û–†–û–ù–ò –ó–î–û–†–û–í º–Ø –£–ö–†–ê–á–ù–ò", { align: "center" })
    .moveDown(0.2)
    .fontSize(16)
    .text("–ú–ï–î–ò–ß–ù–ò–ô –†–ï–¶–ï–ü–¢", { align: "center", underline: true })
    .moveDown(1);

  // üî∂ –î–∞–Ω—ñ –ø–∞—Ü—ñ—î–Ω—Ç–∞ —Ç–∞ –ª—ñ–∫–∞—Ä—è
  doc
    .fontSize(12)
    .text(`–ü–∞—Ü—ñ—î–Ω—Ç: ${patient.last_name} ${patient.first_name} ${patient.middle_name}`)
    .text(`–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: ${formatDate(patient.birth_date)}`)
    .text(`–õ—ñ–∫–∞—Ä: ${doctor.last_name} ${doctor.first_name} ${doctor.middle_name}`)
    .text(`–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: ${doctor.specialization || "-"}`)
    .text(`–õ—ñ–∫–∞—Ä–Ω—è: ${hospital?.name || "-"}, ${hospital?.address || "-"}`)
    .moveDown(1);

  // üìÖ –î–∞—Ç–∏
  doc
    .text(`–î–∞—Ç–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: ${formatDate(prescription.prescribed_date)}`)
    .text(`–î—ñ–π—Å–Ω–∏–π –¥–æ: ${formatDate(prescription.prescription_expiration)}`)
    .moveDown(1);

  // üíä –ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç
  doc
    .fontSize(13)
    .text("–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è", { underline: true })
    .moveDown(0.5)
    .fontSize(12)
    .text(`–ù–∞–∑–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É: ${prescription.medication || "-"}`)
    .text(`–§–æ—Ä–º–∞ –≤–∏–ø—É—Å–∫—É: ${prescription.form || "-"}`)
    .text(`–î–æ–∑—É–≤–∞–Ω–Ω—è: ${prescription.dosage || "-"}`)
    .text(`–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞ –ø—Ä–∏–π–æ–º: ${prescription.quantity_per_dose || "-"}`)
    .text(`–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏–π–æ–º—É: ${prescription.frequency || "-"}`)
    .moveDown(1);

  // üìù –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
  doc
    .fontSize(13)
    .text("–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è", { underline: true })
    .moveDown(0.5)
    .fontSize(12)
    .text(prescription.instructions || "-", {
      width: 460,
      lineGap: 4
    })
    .moveDown(2);

  // üñä –ü—ñ–¥–ø–∏—Å, –ø–µ—á–∞—Ç–∫–∞, –¥–∞—Ç–∞
  const signaturePath = path.resolve(__dirname, "../assets/signature.png");
  const stampPath = path.resolve(__dirname, "../assets/stamp.png");

// üìÖ –î–∞—Ç–∞ –≤–∏–¥–∞—á—ñ (–ø—Ä–∞–≤–∏–π –≤–µ—Ä—Ö–Ω—ñ–π –∫—É—Ç)
doc
  .fontSize(12)
  .text(`–î–∞—Ç–∞ –≤–∏–¥–∞—á—ñ: ${formatDate(new Date())}`, doc.page.width - 170, doc.y);

// –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏
const yBase = doc.y + 30;
const xSignature = 50;
const xStamp = doc.page.width - 170;

// ‚úí –ü—ñ–¥–ø–∏—Å
if (fs.existsSync(signaturePath)) {
  doc.image(signaturePath, xSignature, yBase, { width: 120 });
  doc
    .fontSize(11)
    .text("–ü—ñ–¥–ø–∏—Å –ª—ñ–∫–∞—Ä—è", xSignature + 10, yBase + 60);
}

// üîµ –ü–µ—á–∞—Ç–∫–∞
if (fs.existsSync(stampPath)) {
  doc.image(stampPath, xStamp, yBase - 10, { width: 100 });
}

// üñã –ü—ñ–¥–ø–∏—Å –ª—ñ–∫–∞—Ä—è (–Ω–∏–∂—á–µ)
doc
  .fontSize(11)
  .text("–ü—ñ–¥–ø–∏—Å –ª—ñ–∫–∞—Ä—è", xSignature + 10, yBase + 60);

  doc.end();
}

module.exports = generatePrescriptionPdf;
